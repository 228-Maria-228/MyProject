{"ast":null,"code":"export default class Api {\n  constructor(settings) {\n    this._url = settings.url;\n    this._headers = settings.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  getUserInfo() {\n    const jwt = localStorage.getItem('jwt');\n    return fetch(`${this._url}users/me`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": jwt\n      }\n    }).then(this._checkResponse);\n  }\n  getInitialCards() {\n    const jwt = localStorage.getItem('jwt');\n    return fetch(`${this._url}cards`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        \"Authorization\": jwt\n      }\n    }).then(this._checkResponse);\n  }\n  changeeProfileInfo(data) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        about: data.about\n      })\n    }).then(this._checkResponse);\n  }\n  addNewCard(data) {\n    return fetch(`${this._url}cards`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.naming,\n        link: data.link\n      })\n    }).then(this._checkResponse);\n  }\n  removeCard(id) {\n    return fetch(`${this._url}cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  addLike(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  removeLike(id) {\n    return fetch(`${this._url}cards/${id}/likes`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(this._checkResponse);\n  }\n  updateAvatar(avatar) {\n    return fetch(`${this._url}users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar\n      })\n    }).then(this._checkResponse);\n  }\n}","map":{"version":3,"names":["Api","constructor","settings","_url","url","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","getUserInfo","jwt","localStorage","getItem","fetch","method","then","getInitialCards","changeeProfileInfo","data","body","JSON","stringify","name","about","addNewCard","naming","link","removeCard","id","addLike","removeLike","updateAvatar","avatar"],"sources":["C:/Users/Mashik/Downloads/react-mesto-api-full-gha-main/react-mesto-api-full-gha-main/frontend/src/utils/Api.js"],"sourcesContent":["export default class Api{\n    constructor(settings) {\n        this._url = settings.url\n        this._headers = settings.headers\n    }\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json()\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getUserInfo() {\n        const jwt = localStorage.getItem('jwt')\n        return fetch(`${this._url}users/me`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\" : jwt,\n            }\n        })\n            .then(this._checkResponse)\n            \n    }\n\n    getInitialCards() {\n        const jwt = localStorage.getItem('jwt')\n        return fetch(`${this._url}cards`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                \"Authorization\" : jwt,\n            }\n        })\n        .then(this._checkResponse)\n    }\n\n    changeeProfileInfo(data) {\n        return fetch(`${this._url}users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n        .then(this._checkResponse)\n    }\n\n    addNewCard(data) {\n        return fetch(`${this._url}cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.naming,\n                link: data.link\n            })\n        })\n        .then(this._checkResponse)\n    }\n\n    removeCard(id) {\n        return fetch(`${this._url}cards/${id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._checkResponse)\n    }\n\n    addLike(id) {\n        return fetch(`${this._url}cards/${id}/likes`, {\n            method: 'PUT',\n            headers: this._headers,\n        })\n        .then(this._checkResponse)\n    }\n\n    removeLike(id) {\n        return fetch(`${this._url}cards/${id}/likes`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n        .then(this._checkResponse)\n    }\n\n    updateAvatar(avatar) {\n        return fetch(`${this._url}users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: avatar\n            })\n        })\n        .then(this._checkResponse)\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}