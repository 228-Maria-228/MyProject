{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mashik\\\\Downloads\\\\react-mesto-api-full-gha-main\\\\react-mesto-api-full-gha-main\\\\frontend\\\\src\\\\components\\\\EditAvatarPopup.js\",\n  _s = $RefreshSig$();\nimport '../index.css';\nimport React from \"react\";\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EditAvatarPopup(_ref) {\n  _s();\n  let {\n    isOpen,\n    onClose,\n    onSubmit\n  } = _ref;\n  const [link, setLink] = React.useState('');\n  const currentUser = React.useContext(CurrentUserContext);\n  React.useEffect(() => {\n    if (currentUser.data !== undefined) {\n      setLink(currentUser.data.avatar);\n    }\n  }, [isOpen]);\n  function handleChangeLink(e) {\n    setLink(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    onSubmit(link);\n  }\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    title: 'Обновить аватар',\n    name: 'avatar',\n    isOpen: isOpen,\n    onClose: onClose,\n    buttonText: 'Сохранить',\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"popup__span\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"url\",\n        name: \"description\",\n        id: \"links\",\n        placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u043A\\u0430\\u0440\\u0442\\u0438\\u043D\\u043A\\u0443\",\n        required: true,\n        value: link || '',\n        onChange: handleChangeLink,\n        className: \"popup__input popup__input_type_description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"links-error popup__span\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(EditAvatarPopup, \"+FDgewWVlcsoHGYxnGOxyPG/c6A=\");\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\nvar _c;\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"names":["React","PopupWithForm","CurrentUserContext","jsxDEV","_jsxDEV","EditAvatarPopup","_ref","_s","isOpen","onClose","onSubmit","link","setLink","useState","currentUser","useContext","useEffect","data","undefined","avatar","handleChangeLink","e","target","value","handleSubmit","preventDefault","title","name","buttonText","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","id","placeholder","required","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Mashik/Downloads/react-mesto-api-full-gha-main/react-mesto-api-full-gha-main/frontend/src/components/EditAvatarPopup.js"],"sourcesContent":["import '../index.css';\nimport React from \"react\";\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext';\n\nfunction EditAvatarPopup({isOpen, onClose, onSubmit}) {\n    const [link, setLink] = React.useState('')\n    const currentUser = React.useContext(CurrentUserContext)\n\n    React.useEffect(() => {\n      if (currentUser.data !== undefined) {\n        setLink(currentUser.data.avatar)\n      }\n    }, [isOpen])\n\n    function handleChangeLink(e) {\n      setLink(e.target.value)\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault()\n\n        onSubmit(link)\n      }\n\n    return(\n        <PopupWithForm title={'Обновить аватар'} name={'avatar'} isOpen={isOpen} onClose={onClose} buttonText={'Сохранить'} onSubmit={handleSubmit}>\n          <label>\n            <span className=\"popup__span\"></span>\n            <input type=\"url\" name=\"description\" id=\"links\" placeholder=\"Ссылка на картинку\" required value={link || ''} onChange={handleChangeLink} className=\"popup__input popup__input_type_description\"/>\n            <span className=\"links-error popup__span\"></span>\n          </label>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,SAASC,kBAAkB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpE,SAASC,eAAeA,CAAAC,IAAA,EAA8B;EAAAC,EAAA;EAAA,IAA7B;IAACC,MAAM;IAAEC,OAAO;IAAEC;EAAQ,CAAC,GAAAJ,IAAA;EAChD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGZ,KAAK,CAACa,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMC,WAAW,GAAGd,KAAK,CAACe,UAAU,CAACb,kBAAkB,CAAC;EAExDF,KAAK,CAACgB,SAAS,CAAC,MAAM;IACpB,IAAIF,WAAW,CAACG,IAAI,KAAKC,SAAS,EAAE;MAClCN,OAAO,CAACE,WAAW,CAACG,IAAI,CAACE,MAAM,CAAC;IAClC;EACF,CAAC,EAAE,CAACX,MAAM,CAAC,CAAC;EAEZ,SAASY,gBAAgBA,CAACC,CAAC,EAAE;IAC3BT,OAAO,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB;EAEA,SAASC,YAAYA,CAACH,CAAC,EAAE;IACrBA,CAAC,CAACI,cAAc,CAAC,CAAC;IAElBf,QAAQ,CAACC,IAAI,CAAC;EAChB;EAEF,oBACIP,OAAA,CAACH,aAAa;IAACyB,KAAK,EAAE,iBAAkB;IAACC,IAAI,EAAE,QAAS;IAACnB,MAAM,EAAEA,MAAO;IAACC,OAAO,EAAEA,OAAQ;IAACmB,UAAU,EAAE,WAAY;IAAClB,QAAQ,EAAEc,YAAa;IAAAK,QAAA,eACzIzB,OAAA;MAAAyB,QAAA,gBACEzB,OAAA;QAAM0B,SAAS,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrC9B,OAAA;QAAO+B,IAAI,EAAC,KAAK;QAACR,IAAI,EAAC,aAAa;QAACS,EAAE,EAAC,OAAO;QAACC,WAAW,EAAC,oGAAoB;QAACC,QAAQ;QAACf,KAAK,EAAEZ,IAAI,IAAI,EAAG;QAAC4B,QAAQ,EAAEnB,gBAAiB;QAACU,SAAS,EAAC;MAA4C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjM9B,OAAA;QAAM0B,SAAS,EAAC;MAAyB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAExB;AAAC3B,EAAA,CA7BQF,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AA+BxB,eAAeA,eAAe;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}