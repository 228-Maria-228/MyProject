{"ast":null,"code":"export default class Auth {\n  constructor(settings) {\n    this._url = settings.url;\n    this._headers = settings.headers;\n  }\n  _checkResponse(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  signUp(data) {\n    return fetch(`${this._url}signup`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        'password': data.password,\n        'email': data.email\n      })\n    }).then(this._checkResponse);\n  }\n  signIn(data) {\n    return fetch(`${this._url}signin`, {\n      method: 'POST',\n      headers: this._headers,\n      body: JSON.stringify({\n        'password': data.password,\n        'email': data.email\n      })\n    }).then(this._checkResponse);\n  }\n  checkJWT(token) {\n    return fetch(`${this._url}users/me`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(this._checkResponse);\n  }\n}","map":{"version":3,"names":["Auth","constructor","settings","_url","url","_headers","headers","_checkResponse","res","ok","json","Promise","reject","status","signUp","data","fetch","method","body","JSON","stringify","password","email","then","signIn","checkJWT","token"],"sources":["C:/Users/Mashik/Downloads/react-mesto-api-full-gha-main/react-mesto-api-full-gha-main/frontend/src/utils/Auth.js"],"sourcesContent":["export default class Auth {\n    constructor(settings) {\n        this._url = settings.url\n        this._headers = settings.headers\n    }\n\n    _checkResponse(res) {\n        if (res.ok) {\n            return res.json()\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    signUp(data) {\n        return fetch(`${this._url}signup`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                'password': data.password,\n                'email': data.email\n            })\n        })\n            .then(this._checkResponse)\n    }\n\n    signIn(data) {\n        return fetch(`${this._url}signin`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                'password': data.password,\n                'email': data.email\n            })\n        })\n            .then(this._checkResponse)\n    }\n    checkJWT(token) {\n        return fetch(`${this._url}users/me`, {\n            method: 'GET',\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Authorization\" : `Bearer ${token}`\n            },\n        })\n            .then(this._checkResponse)\n    }\n}\n"],"mappings":"AAAA,eAAe,MAAMA,IAAI,CAAC;EACtBC,WAAWA,CAACC,QAAQ,EAAE;IAClB,IAAI,CAACC,IAAI,GAAGD,QAAQ,CAACE,GAAG;IACxB,IAAI,CAACC,QAAQ,GAAGH,QAAQ,CAACI,OAAO;EACpC;EAEAC,cAAcA,CAACC,GAAG,EAAE;IAChB,IAAIA,GAAG,CAACC,EAAE,EAAE;MACR,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACrB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAClD;EAEAC,MAAMA,CAACC,IAAI,EAAE;IACT,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACb,IAAK,QAAO,EAAE;MAC/Bc,MAAM,EAAE,MAAM;MACdX,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjB,UAAU,EAAEL,IAAI,CAACM,QAAQ;QACzB,OAAO,EAAEN,IAAI,CAACO;MAClB,CAAC;IACL,CAAC,CAAC,CACGC,IAAI,CAAC,IAAI,CAAChB,cAAc,CAAC;EAClC;EAEAiB,MAAMA,CAACT,IAAI,EAAE;IACT,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACb,IAAK,QAAO,EAAE;MAC/Bc,MAAM,EAAE,MAAM;MACdX,OAAO,EAAE,IAAI,CAACD,QAAQ;MACtBa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjB,UAAU,EAAEL,IAAI,CAACM,QAAQ;QACzB,OAAO,EAAEN,IAAI,CAACO;MAClB,CAAC;IACL,CAAC,CAAC,CACGC,IAAI,CAAC,IAAI,CAAChB,cAAc,CAAC;EAClC;EACAkB,QAAQA,CAACC,KAAK,EAAE;IACZ,OAAOV,KAAK,CAAE,GAAE,IAAI,CAACb,IAAK,UAAS,EAAE;MACjCc,MAAM,EAAE,KAAK;MACbX,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAI,UAASoB,KAAM;MACtC;IACJ,CAAC,CAAC,CACGH,IAAI,CAAC,IAAI,CAAChB,cAAc,CAAC;EAClC;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}